2019-07-23 13:07:04.682 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-23 13:07:04.736 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 13:07:04.746 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 13:07:04.746 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 13:07:04.746 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 13:07:04.746 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 13:07:04.747 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 13:07:04.747 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 13:07:05.282 +02:00 [DBG] Login Url: /Account/Login
2019-07-23 13:07:05.285 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 13:07:05.285 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-23 13:07:05.285 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-23 13:07:05.285 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 13:07:05.285 +02:00 [DBG] Error Url: /home/error
2019-07-23 13:07:05.285 +02:00 [DBG] Error Id Parameter: errorId
2019-07-23 13:07:05.311 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 13:07:05.314 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 13:07:05.314 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 13:07:05.317 +02:00 [DBG] Start discovery request
2019-07-23 14:58:02.442 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-23 14:58:02.496 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 14:58:02.508 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 14:58:02.508 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 14:58:02.508 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 14:58:02.508 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 14:58:02.508 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 14:58:02.508 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 14:58:02.952 +02:00 [DBG] Login Url: /Account/Login
2019-07-23 14:58:02.954 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 14:58:02.954 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-23 14:58:02.954 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-23 14:58:02.954 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 14:58:02.954 +02:00 [DBG] Error Url: /home/error
2019-07-23 14:58:02.954 +02:00 [DBG] Error Id Parameter: errorId
2019-07-23 14:58:22.533 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 14:58:22.536 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 14:58:22.536 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 14:58:22.539 +02:00 [DBG] Start discovery request
2019-07-23 14:58:23.082 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 14:58:23.083 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 14:58:23.083 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 14:58:23.087 +02:00 [DBG] Start key discovery request
2019-07-23 14:58:23.666 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 14:58:23.673 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 14:58:23.673 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 14:58:23.681 +02:00 [DBG] Start token request.
2019-07-23 14:58:23.687 +02:00 [DBG] Start client validation
2019-07-23 14:58:23.692 +02:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 14:58:23.692 +02:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2019-07-23 14:58:23.692 +02:00 [DBG] Secret id found: client
2019-07-23 14:58:23.708 +02:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 14:58:23.717 +02:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 14:58:23.717 +02:00 [DBG] Client validation success
2019-07-23 14:58:23.749 +02:00 [DBG] Start token request validation
2019-07-23 14:58:23.756 +02:00 [DBG] Start client credentials token request validation
2019-07-23 14:58:23.781 +02:00 [DBG] client credentials token request validation success
2019-07-23 14:58:23.795 +02:00 [INF] Token request validation success, {"ClientId":"client","ClientName":null,"GrantType":"client_credentials","Scopes":"fightcore-backend","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"fightcore-backend"},"$type":"TokenRequestValidationLog"}
2019-07-23 14:58:23.840 +02:00 [DBG] Getting claims for access token for client: client
2019-07-23 14:58:23.910 +02:00 [DBG] Token request success.
2019-07-23 14:58:48.382 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-07-23 14:58:48.385 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-07-23 14:58:48.385 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-07-23 14:58:48.386 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 14:58:48.386 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 14:58:48.386 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 14:58:48.386 +02:00 [DBG] Start discovery request
2019-07-23 15:17:33.633 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-23 15:17:33.687 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 15:17:33.696 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 15:17:33.696 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 15:17:33.696 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 15:17:33.698 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 15:17:33.699 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 15:17:33.699 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 15:17:48.082 +02:00 [DBG] Login Url: /Account/Login
2019-07-23 15:17:48.089 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 15:17:48.090 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-23 15:17:48.091 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-23 15:17:48.092 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 15:17:48.092 +02:00 [DBG] Error Url: /home/error
2019-07-23 15:17:48.093 +02:00 [DBG] Error Id Parameter: errorId
2019-07-23 15:17:48.146 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 15:17:48.151 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 15:17:48.152 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 15:17:48.156 +02:00 [DBG] Start discovery request
2019-07-23 15:17:48.402 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 15:17:48.410 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 15:17:48.411 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 15:17:48.415 +02:00 [DBG] Start key discovery request
2019-07-23 15:17:49.110 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 15:17:49.118 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 15:17:49.119 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 15:17:49.134 +02:00 [DBG] Start token request.
2019-07-23 15:17:49.143 +02:00 [DBG] Start client validation
2019-07-23 15:17:49.151 +02:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 15:17:49.157 +02:00 [DBG] Start parsing for secret in post body
2019-07-23 15:17:49.199 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 15:17:49.202 +02:00 [DBG] Secret id found: client
2019-07-23 15:17:49.242 +02:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 15:17:49.257 +02:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 15:17:49.257 +02:00 [DBG] Client validation success
2019-07-23 15:17:49.272 +02:00 [DBG] Start token request validation
2019-07-23 15:17:49.284 +02:00 [DBG] Start client credentials token request validation
2019-07-23 15:17:49.305 +02:00 [ERR] Requested scope not allowed: api1
2019-07-23 15:17:49.319 +02:00 [ERR] {"ClientId":"client","ClientName":null,"GrantType":"client_credentials","Scopes":null,"AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"api1","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 15:18:09.086 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-23 15:18:09.130 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 15:18:09.138 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 15:18:09.138 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 15:18:09.138 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 15:18:09.138 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 15:18:09.139 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 15:18:09.139 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 15:18:20.785 +02:00 [DBG] Login Url: /Account/Login
2019-07-23 15:18:20.788 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 15:18:20.789 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-23 15:18:20.789 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-23 15:18:20.790 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 15:18:20.791 +02:00 [DBG] Error Url: /home/error
2019-07-23 15:18:20.791 +02:00 [DBG] Error Id Parameter: errorId
2019-07-23 15:18:20.850 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 15:18:20.855 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 15:18:20.868 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 15:18:20.874 +02:00 [DBG] Start discovery request
2019-07-23 15:18:21.277 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 15:18:21.297 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 15:18:21.298 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 15:18:21.307 +02:00 [DBG] Start key discovery request
2019-07-23 15:18:21.668 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 15:18:21.676 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 15:18:21.677 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 15:18:21.689 +02:00 [DBG] Start token request.
2019-07-23 15:18:21.695 +02:00 [DBG] Start client validation
2019-07-23 15:18:21.702 +02:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 15:18:21.707 +02:00 [DBG] Start parsing for secret in post body
2019-07-23 15:18:21.729 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 15:18:21.729 +02:00 [DBG] Secret id found: client
2019-07-23 15:18:21.744 +02:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 15:18:21.754 +02:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 15:18:21.754 +02:00 [DBG] Client validation success
2019-07-23 15:18:21.766 +02:00 [DBG] Start token request validation
2019-07-23 15:18:21.775 +02:00 [DBG] Start client credentials token request validation
2019-07-23 15:18:21.805 +02:00 [DBG] client credentials token request validation success
2019-07-23 15:18:21.819 +02:00 [INF] Token request validation success, {"ClientId":"client","ClientName":null,"GrantType":"client_credentials","Scopes":"fightcore-backend","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"fightcore-backend","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 15:18:21.886 +02:00 [DBG] Getting claims for access token for client: client
2019-07-23 15:18:21.951 +02:00 [DBG] Token request success.
2019-07-23 15:18:42.786 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-07-23 15:18:42.788 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-07-23 15:18:42.789 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-07-23 15:18:42.790 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 15:18:42.791 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 15:18:42.792 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 15:18:42.797 +02:00 [DBG] Start discovery request
2019-07-23 15:18:44.426 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-07-23 15:18:44.428 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-07-23 15:18:44.429 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-07-23 15:18:44.430 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 15:18:44.432 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 15:18:44.433 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 15:18:44.434 +02:00 [DBG] Start discovery request
2019-07-23 15:25:55.784 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-23 15:25:55.827 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 15:25:55.835 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 15:25:55.835 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 15:25:55.836 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 15:25:55.836 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 15:25:55.836 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 15:25:55.836 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 15:26:08.252 +02:00 [DBG] Login Url: /Account/Login
2019-07-23 15:26:08.261 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 15:26:08.263 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-23 15:26:08.265 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-23 15:26:08.266 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 15:26:08.266 +02:00 [DBG] Error Url: /home/error
2019-07-23 15:26:08.267 +02:00 [DBG] Error Id Parameter: errorId
2019-07-23 15:26:08.302 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 15:26:08.307 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 15:26:08.308 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 15:26:08.312 +02:00 [DBG] Start discovery request
2019-07-23 15:26:08.571 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 15:26:08.579 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 15:26:08.580 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 15:26:08.584 +02:00 [DBG] Start key discovery request
2019-07-23 15:26:09.349 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 15:26:09.358 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 15:26:09.359 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 15:26:09.369 +02:00 [DBG] Start token request.
2019-07-23 15:26:09.375 +02:00 [DBG] Start client validation
2019-07-23 15:26:09.386 +02:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 15:26:09.392 +02:00 [DBG] Start parsing for secret in post body
2019-07-23 15:26:09.412 +02:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 15:26:09.412 +02:00 [DBG] Secret id found: client
2019-07-23 15:26:09.428 +02:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 15:26:09.437 +02:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 15:26:09.437 +02:00 [DBG] Client validation success
2019-07-23 15:26:09.447 +02:00 [DBG] Start token request validation
2019-07-23 15:26:09.459 +02:00 [DBG] Start resource owner password token request validation
2019-07-23 15:26:09.485 +02:00 [DBG] IsActive called from: ResourceOwnerValidation
2019-07-23 15:26:09.487 +02:00 [DBG] Resource owner password token request validation success.
2019-07-23 15:26:09.502 +02:00 [INF] Token request validation success, {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"fightcore-backend","AuthorizationCode":null,"RefreshToken":null,"UserName":"alice","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","username":"alice","password":"***REDACTED***","scope":"fightcore-backend","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 15:26:09.549 +02:00 [DBG] Getting claims for access token for client: client
2019-07-23 15:26:09.550 +02:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 15:26:09.555 +02:00 [DBG] Get profile called for subject 1 from client client with claim types [] via ClaimsProviderAccessToken
2019-07-23 15:26:09.559 +02:00 [DBG] Issued claims: []
2019-07-23 15:26:09.643 +02:00 [DBG] Token request success.
2019-07-23 15:46:47.927 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-23 15:46:47.970 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 15:46:47.978 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 15:46:47.979 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 15:46:47.979 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 15:46:47.979 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 15:46:47.980 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 15:46:47.980 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 15:47:01.802 +02:00 [DBG] Login Url: /Account/Login
2019-07-23 15:47:01.804 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 15:47:01.805 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-23 15:47:01.805 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-23 15:47:01.806 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 15:47:01.806 +02:00 [DBG] Error Url: /home/error
2019-07-23 15:47:01.807 +02:00 [DBG] Error Id Parameter: errorId
2019-07-23 15:47:49.101 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-23 15:47:49.157 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 15:47:49.167 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 15:47:49.168 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 15:47:49.168 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 15:47:49.168 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 15:47:49.168 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 15:47:49.168 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 15:48:06.480 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-23 15:48:06.521 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 15:48:06.529 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 15:48:06.529 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 15:48:06.529 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 15:48:06.529 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 15:48:06.529 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 15:48:06.530 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 15:48:10.943 +02:00 [DBG] Login Url: /Account/Login
2019-07-23 15:48:10.946 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 15:48:10.947 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-23 15:48:10.948 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-23 15:48:10.948 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 15:48:10.949 +02:00 [DBG] Error Url: /home/error
2019-07-23 15:48:10.949 +02:00 [DBG] Error Id Parameter: errorId
2019-07-23 15:48:27.488 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-23 15:48:27.528 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 15:48:27.536 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 15:48:27.536 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 15:48:27.536 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 15:48:27.537 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 15:48:27.537 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 15:48:27.537 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 15:48:32.857 +02:00 [DBG] Login Url: /Account/Login
2019-07-23 15:48:32.862 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 15:48:32.863 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-23 15:48:32.864 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-23 15:48:32.864 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 15:48:32.865 +02:00 [DBG] Error Url: /home/error
2019-07-23 15:48:32.865 +02:00 [DBG] Error Id Parameter: errorId
2019-07-23 15:49:03.397 +02:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 15:49:06.926 +02:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 15:49:22.357 +02:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 15:49:22.401 +02:00 [DBG] Augmenting SignInContext
2019-07-23 15:49:22.407 +02:00 [DBG] Adding idp claim with value: local
2019-07-23 15:49:22.407 +02:00 [DBG] Adding amr claim with value: pwd
2019-07-23 15:49:22.420 +02:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-23 17:34:29.072 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:34:29.126 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is not allowed
2019-07-23 17:34:29.155 +02:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4200
2019-07-23 17:34:29.206 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:34:29.240 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:34:29.273 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:34:29.302 +02:00 [DBG] Start discovery request
2019-07-23 17:37:24.418 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-23 17:37:24.470 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 17:37:24.479 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 17:37:24.479 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 17:37:24.479 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 17:37:24.480 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 17:37:24.480 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 17:37:24.481 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 17:37:28.063 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:37:28.081 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is not allowed
2019-07-23 17:37:28.084 +02:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4200
2019-07-23 17:37:28.112 +02:00 [DBG] Login Url: /Account/Login
2019-07-23 17:37:28.115 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 17:37:28.128 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-23 17:37:28.135 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-23 17:37:28.146 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 17:37:28.152 +02:00 [DBG] Error Url: /home/error
2019-07-23 17:37:28.155 +02:00 [DBG] Error Id Parameter: errorId
2019-07-23 17:37:28.212 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:37:28.217 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:37:28.219 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:37:28.228 +02:00 [DBG] Start discovery request
2019-07-23 17:37:28.416 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-23 17:37:28.440 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-23 17:37:28.441 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-23 17:37:28.446 +02:00 [DBG] Start authorize request
2019-07-23 17:37:28.456 +02:00 [DBG] User in authorize request: 1
2019-07-23 17:37:28.462 +02:00 [DBG] Start authorize request protocol validation
2019-07-23 17:37:28.484 +02:00 [ERR] Unknown client or not enabled: angular_spa
{"ClientId":null,"ClientName":null,"RedirectUri":null,"AllowedRedirectUris":null,"SubjectId":"1","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile email fightcore-backend","state":"8c84e462e1474807981e293a85b717e7","nonce":"5b75c652180a4cee8595260ca40aa88e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 17:37:28.509 +02:00 [ERR] Request validation failed
2019-07-23 17:37:28.509 +02:00 [INF] {"ClientId":null,"ClientName":null,"RedirectUri":null,"AllowedRedirectUris":null,"SubjectId":"1","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile email fightcore-backend","state":"8c84e462e1474807981e293a85b717e7","nonce":"5b75c652180a4cee8595260ca40aa88e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 17:40:04.323 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-23 17:40:04.388 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 17:40:04.407 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 17:40:04.407 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 17:40:04.407 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 17:40:04.407 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 17:40:04.408 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 17:40:04.408 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 17:40:07.566 +02:00 [DBG] Login Url: /Account/Login
2019-07-23 17:40:07.569 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 17:40:07.571 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-23 17:40:07.572 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-23 17:40:07.573 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 17:40:07.573 +02:00 [DBG] Error Url: /home/error
2019-07-23 17:40:07.574 +02:00 [DBG] Error Id Parameter: errorId
2019-07-23 17:40:07.624 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-23 17:40:07.646 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-23 17:40:07.649 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-23 17:40:07.653 +02:00 [DBG] Start authorize request
2019-07-23 17:40:07.663 +02:00 [DBG] User in authorize request: 1
2019-07-23 17:40:07.668 +02:00 [DBG] Start authorize request protocol validation
2019-07-23 17:40:07.684 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-23 17:40:07.719 +02:00 [ERR] Invalid scope: profile
2019-07-23 17:40:07.722 +02:00 [ERR] Request validation failed
2019-07-23 17:40:07.735 +02:00 [INF] {"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile email fightcore-backend","State":"1506483428c148fb82ed5d61d2155d94","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile email fightcore-backend","state":"1506483428c148fb82ed5d61d2155d94","nonce":"d69656b189844246bff53194f0320c0c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 17:41:11.925 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:41:11.994 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:41:12.020 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:41:12.023 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:41:12.026 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:41:12.029 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:41:12.034 +02:00 [DBG] Start discovery request
2019-07-23 17:41:12.267 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-23 17:41:12.269 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-23 17:41:12.271 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-23 17:41:12.274 +02:00 [DBG] Start authorize request
2019-07-23 17:41:12.275 +02:00 [DBG] User in authorize request: 1
2019-07-23 17:41:12.277 +02:00 [DBG] Start authorize request protocol validation
2019-07-23 17:41:12.282 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-23 17:41:12.285 +02:00 [ERR] response_type requires the openid scope
{"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"fightcore-backend","State":"90e8ea2931ef457f99d35069fa4f6927","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"fightcore-backend","state":"90e8ea2931ef457f99d35069fa4f6927","nonce":"81b68c902c2f45f5a887b54c5e73bf7e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 17:41:12.317 +02:00 [ERR] Request validation failed
2019-07-23 17:41:12.320 +02:00 [INF] {"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"fightcore-backend","State":"90e8ea2931ef457f99d35069fa4f6927","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"fightcore-backend","state":"90e8ea2931ef457f99d35069fa4f6927","nonce":"81b68c902c2f45f5a887b54c5e73bf7e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 17:41:31.933 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-23 17:41:32.010 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 17:41:32.025 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 17:41:32.026 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 17:41:32.026 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 17:41:32.026 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 17:41:32.026 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 17:41:32.026 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 17:41:39.726 +02:00 [DBG] Login Url: /Account/Login
2019-07-23 17:41:39.731 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 17:41:39.731 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-23 17:41:39.732 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-23 17:41:39.733 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 17:41:39.733 +02:00 [DBG] Error Url: /home/error
2019-07-23 17:41:39.734 +02:00 [DBG] Error Id Parameter: errorId
2019-07-23 17:41:39.836 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-23 17:41:39.864 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-23 17:41:39.865 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-23 17:41:39.870 +02:00 [DBG] Start authorize request
2019-07-23 17:41:39.881 +02:00 [DBG] User in authorize request: 1
2019-07-23 17:41:39.887 +02:00 [DBG] Start authorize request protocol validation
2019-07-23 17:41:39.904 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-23 17:41:39.939 +02:00 [ERR] response_type requires the openid scope
{"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"fightcore-backend","State":"d3ced8eeb1884be691d5847866cc6b31","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"fightcore-backend","state":"d3ced8eeb1884be691d5847866cc6b31","nonce":"33616a4d15e74b84905a1ad3d2333d2f"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 17:41:39.965 +02:00 [ERR] Request validation failed
2019-07-23 17:41:39.966 +02:00 [INF] {"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"fightcore-backend","State":"d3ced8eeb1884be691d5847866cc6b31","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"fightcore-backend","state":"d3ced8eeb1884be691d5847866cc6b31","nonce":"33616a4d15e74b84905a1ad3d2333d2f"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 17:42:00.263 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:42:00.270 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:42:00.275 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:42:00.277 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:42:00.280 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:42:00.281 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:42:00.287 +02:00 [DBG] Start discovery request
2019-07-23 17:42:00.471 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-23 17:42:00.474 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-23 17:42:00.476 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-23 17:42:00.478 +02:00 [DBG] Start authorize request
2019-07-23 17:42:00.479 +02:00 [DBG] User in authorize request: 1
2019-07-23 17:42:00.483 +02:00 [DBG] Start authorize request protocol validation
2019-07-23 17:42:00.486 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-23 17:42:00.511 +02:00 [ERR] Invalid scope: profile
2019-07-23 17:42:00.517 +02:00 [ERR] Request validation failed
2019-07-23 17:42:00.520 +02:00 [INF] {"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile email fightcore-backend","State":"8640647d9026457eaa103d44cff9c75c","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile email fightcore-backend","state":"8640647d9026457eaa103d44cff9c75c","nonce":"5484d7a9668f4c6c815f9eb294bd0d8c"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 17:42:53.903 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-23 17:42:53.942 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 17:42:53.951 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 17:42:53.951 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 17:42:53.951 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 17:42:53.951 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 17:42:53.951 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 17:42:53.952 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 17:42:54.438 +02:00 [DBG] Login Url: /Account/Login
2019-07-23 17:42:54.440 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 17:42:54.441 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-23 17:42:54.442 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-23 17:42:54.443 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 17:42:54.444 +02:00 [DBG] Error Url: /home/error
2019-07-23 17:42:54.445 +02:00 [DBG] Error Id Parameter: errorId
2019-07-23 17:42:54.483 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-23 17:42:54.502 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-23 17:42:54.503 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-23 17:42:54.508 +02:00 [DBG] Start authorize request
2019-07-23 17:42:54.517 +02:00 [DBG] User in authorize request: 1
2019-07-23 17:42:54.522 +02:00 [DBG] Start authorize request protocol validation
2019-07-23 17:42:54.539 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-23 17:42:54.574 +02:00 [ERR] Invalid scope: profile
2019-07-23 17:42:54.577 +02:00 [ERR] Request validation failed
2019-07-23 17:42:54.591 +02:00 [INF] {"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid profile email fightcore-backend","State":"cf77d5fe3ea6485e89874b7d5755508a","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid profile email fightcore-backend","state":"cf77d5fe3ea6485e89874b7d5755508a","nonce":"ae169340cce8473d9e11ae7cbdcfa590"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 17:43:03.008 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:43:03.030 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:43:03.034 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:43:03.039 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:43:03.043 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:43:03.046 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:43:03.052 +02:00 [DBG] Start discovery request
2019-07-23 17:43:03.242 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-23 17:43:03.246 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-23 17:43:03.247 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-23 17:43:03.263 +02:00 [DBG] Start authorize request
2019-07-23 17:43:03.270 +02:00 [DBG] User in authorize request: 1
2019-07-23 17:43:03.272 +02:00 [DBG] Start authorize request protocol validation
2019-07-23 17:43:03.273 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-23 17:43:03.303 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 17:43:03.306 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"1","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid fightcore-backend","State":"1a63e79bf464490d90d69413e7eca82f","UiLocales":null,"Nonce":"9c880c2aeca84262aa469c68eb077045","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"e75eb16d46940975cf85f759f095944a","Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid fightcore-backend","state":"1a63e79bf464490d90d69413e7eca82f","nonce":"9c880c2aeca84262aa469c68eb077045"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 17:43:03.330 +02:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-23 17:43:03.355 +02:00 [DBG] Client is configured to not require consent, no consent is required
2019-07-23 17:43:03.367 +02:00 [DBG] Creating Implicit Flow response.
2019-07-23 17:43:03.386 +02:00 [DBG] Getting claims for access token for client: angular_spa
2019-07-23 17:43:03.388 +02:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 17:43:03.395 +02:00 [DBG] Get profile called for subject 1 from client Angular SPA with claim types [] via ClaimsProviderAccessToken
2019-07-23 17:43:03.399 +02:00 [DBG] Issued claims: []
2019-07-23 17:43:03.478 +02:00 [DBG] Getting claims for identity token for subject: 1 and client: angular_spa
2019-07-23 17:43:03.479 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-23 17:43:03.488 +02:00 [DBG] Authorize endpoint response
{"SubjectId":"1","ClientId":"angular_spa","RedirectUri":"http://localhost:4200/auth-callback","State":"1a63e79bf464490d90d69413e7eca82f","Scope":"openid fightcore-backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-23 17:43:03.507 +02:00 [DBG] Augmenting SignInContext
2019-07-23 17:43:03.516 +02:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-23 17:44:19.274 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2019-07-23 17:44:19.280 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-07-23 17:44:19.283 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-07-23 17:44:19.294 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:44:19.296 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:44:19.297 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:44:19.299 +02:00 [DBG] Start discovery request
2019-07-23 17:44:19.373 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2019-07-23 17:44:19.376 +02:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2019-07-23 17:44:19.377 +02:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2019-07-23 17:44:19.378 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 17:44:19.380 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 17:44:19.383 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 17:44:19.392 +02:00 [DBG] Start key discovery request
2019-07-23 17:44:33.053 +02:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 17:44:33.156 +02:00 [INF] AuthenticationScheme: idsrv signed out.
2019-07-23 17:44:33.309 +02:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-23 17:44:33.313 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-23 17:44:33.314 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-23 17:44:33.320 +02:00 [DBG] Processing signout callback request
2019-07-23 17:44:33.330 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-23 17:44:33.331 +02:00 [DBG] No client front-channel logout URLs
2019-07-23 17:44:33.332 +02:00 [DBG] No client back-channel logout URLs
2019-07-23 17:44:33.333 +02:00 [INF] Successful signout callback.
2019-07-23 17:44:33.333 +02:00 [DBG] No client front-channel iframe urls
2019-07-23 17:44:33.334 +02:00 [DBG] No client back-channel iframe urls
2019-07-23 17:44:45.245 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:44:45.248 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:44:45.251 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:44:45.252 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:44:45.253 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:44:45.259 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:44:45.264 +02:00 [DBG] Start discovery request
2019-07-23 17:44:45.389 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-23 17:44:45.398 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-23 17:44:45.399 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-23 17:44:45.400 +02:00 [DBG] Start authorize request
2019-07-23 17:44:45.401 +02:00 [DBG] No user present in authorize request
2019-07-23 17:44:45.402 +02:00 [DBG] Start authorize request protocol validation
2019-07-23 17:44:45.403 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-23 17:44:45.404 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 17:44:45.405 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid fightcore-backend","State":"5a42727189c848b1b78443d68e4e7d8b","UiLocales":null,"Nonce":"fb752233ffad471f94ddb59bf4a9cbd4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid fightcore-backend","state":"5a42727189c848b1b78443d68e4e7d8b","nonce":"fb752233ffad471f94ddb59bf4a9cbd4"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 17:44:45.414 +02:00 [INF] Showing login: User is not authenticated
2019-07-23 17:44:45.495 +02:00 [DBG] Start authorize request protocol validation
2019-07-23 17:44:45.501 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-23 17:44:45.503 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 17:44:45.506 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-23 17:44:54.965 +02:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 17:44:55.003 +02:00 [DBG] Start authorize request protocol validation
2019-07-23 17:44:55.003 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-23 17:44:55.007 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 17:44:55.017 +02:00 [DBG] Augmenting SignInContext
2019-07-23 17:44:55.017 +02:00 [DBG] Adding idp claim with value: local
2019-07-23 17:44:55.018 +02:00 [DBG] Adding amr claim with value: pwd
2019-07-23 17:44:55.020 +02:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-23 17:44:55.022 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-23 17:44:55.027 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-23 17:44:55.029 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-23 17:44:55.029 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-23 17:44:55.036 +02:00 [DBG] Start authorize callback request
2019-07-23 17:44:55.040 +02:00 [DBG] User in authorize request: 2
2019-07-23 17:44:55.040 +02:00 [DBG] Start authorize request protocol validation
2019-07-23 17:44:55.041 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-23 17:44:55.042 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 17:44:55.044 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid fightcore-backend","State":"5a42727189c848b1b78443d68e4e7d8b","UiLocales":null,"Nonce":"fb752233ffad471f94ddb59bf4a9cbd4","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"404b5058cbd211a933b10087ec3c614a","Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid fightcore-backend","state":"5a42727189c848b1b78443d68e4e7d8b","nonce":"fb752233ffad471f94ddb59bf4a9cbd4"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 17:44:55.049 +02:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-23 17:44:55.049 +02:00 [DBG] Client is configured to not require consent, no consent is required
2019-07-23 17:44:55.050 +02:00 [DBG] Creating Implicit Flow response.
2019-07-23 17:44:55.050 +02:00 [DBG] Getting claims for access token for client: angular_spa
2019-07-23 17:44:55.051 +02:00 [DBG] Getting claims for access token for subject: 2
2019-07-23 17:44:55.051 +02:00 [DBG] Get profile called for subject 2 from client Angular SPA with claim types [] via ClaimsProviderAccessToken
2019-07-23 17:44:55.055 +02:00 [DBG] Issued claims: []
2019-07-23 17:44:55.058 +02:00 [DBG] Getting claims for identity token for subject: 2 and client: angular_spa
2019-07-23 17:44:55.059 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-23 17:44:55.062 +02:00 [DBG] Authorize endpoint response
{"SubjectId":"2","ClientId":"angular_spa","RedirectUri":"http://localhost:4200/auth-callback","State":"5a42727189c848b1b78443d68e4e7d8b","Scope":"openid fightcore-backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-23 17:44:55.066 +02:00 [DBG] Augmenting SignInContext
2019-07-23 17:44:55.066 +02:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-23 17:47:08.503 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:47:08.505 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:47:08.507 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:47:08.507 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:47:08.508 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:47:08.509 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:47:08.511 +02:00 [DBG] Start discovery request
2019-07-23 17:47:08.630 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-23 17:47:08.632 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-23 17:47:08.634 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-23 17:47:08.635 +02:00 [DBG] Start authorize request
2019-07-23 17:47:08.637 +02:00 [DBG] User in authorize request: 2
2019-07-23 17:47:08.637 +02:00 [DBG] Start authorize request protocol validation
2019-07-23 17:47:08.638 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-23 17:47:08.640 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-23 17:47:08.643 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid fightcore-backend","State":"b5c1c8a51a12411895183455ac38e3f9","UiLocales":null,"Nonce":"efe12e200d5a443b8981d8a97468aa6e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"404b5058cbd211a933b10087ec3c614a","Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid fightcore-backend","state":"b5c1c8a51a12411895183455ac38e3f9","nonce":"efe12e200d5a443b8981d8a97468aa6e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 17:47:08.653 +02:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-23 17:47:08.654 +02:00 [DBG] Client is configured to not require consent, no consent is required
2019-07-23 17:47:08.654 +02:00 [DBG] Creating Implicit Flow response.
2019-07-23 17:47:08.655 +02:00 [DBG] Getting claims for access token for client: angular_spa
2019-07-23 17:47:08.656 +02:00 [DBG] Getting claims for access token for subject: 2
2019-07-23 17:47:08.657 +02:00 [DBG] Get profile called for subject 2 from client Angular SPA with claim types [] via ClaimsProviderAccessToken
2019-07-23 17:47:08.658 +02:00 [DBG] Issued claims: []
2019-07-23 17:47:08.661 +02:00 [DBG] Getting claims for identity token for subject: 2 and client: angular_spa
2019-07-23 17:47:08.663 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-23 17:47:08.667 +02:00 [DBG] Authorize endpoint response
{"SubjectId":"2","ClientId":"angular_spa","RedirectUri":"http://localhost:4200/auth-callback","State":"b5c1c8a51a12411895183455ac38e3f9","Scope":"openid fightcore-backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-23 17:47:10.312 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-23 17:47:10.325 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:47:10.326 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:47:10.328 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:47:10.330 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:47:10.332 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:47:10.334 +02:00 [DBG] Start discovery request
2019-07-23 17:47:10.401 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-23 17:47:10.411 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:47:10.415 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:47:10.416 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 17:47:10.417 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 17:47:10.419 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 17:47:10.421 +02:00 [DBG] Start key discovery request
2019-07-23 17:47:10.487 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-23 17:47:10.511 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-23 17:47:10.526 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-23 17:47:10.528 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-23 17:47:10.531 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-23 17:47:10.533 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-23 17:47:10.544 +02:00 [DBG] Start userinfo request
2019-07-23 17:47:10.548 +02:00 [DBG] Bearer token found in header
2019-07-23 17:47:10.618 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-23 17:47:10.630 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-23 17:47:10.632 +02:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-23 17:47:10.632 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-23 17:47:10.635 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563896828,"exp":1563900428,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","fightcore-backend"],"client_id":"angular_spa","sub":"2","auth_time":1563896695,"idp":"local","scope":["openid","fightcore-backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-23 17:47:10.641 +02:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-23 17:47:10.652 +02:00 [DBG] Creating userinfo response
2019-07-23 17:47:10.658 +02:00 [DBG] Scopes in access token: openid fightcore-backend
2019-07-23 17:47:10.662 +02:00 [DBG] Scopes in access token: openid fightcore-backend
2019-07-23 17:47:10.673 +02:00 [DBG] Requested claim types: sub
2019-07-23 17:47:10.674 +02:00 [DBG] Scopes in access token: openid fightcore-backend
2019-07-23 17:47:10.676 +02:00 [DBG] Get profile called for subject 2 from client Angular SPA with claim types ["sub"] via UserInfoEndpoint
2019-07-23 17:47:10.681 +02:00 [DBG] Issued claims: []
2019-07-23 17:47:10.682 +02:00 [INF] Profile service returned the following claim types: 
2019-07-23 17:47:10.685 +02:00 [DBG] End userinfo request
2019-07-23 17:47:10.707 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-23 17:47:10.709 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-23 17:47:10.712 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-23 17:47:10.738 +02:00 [DBG] Rendering check session result
2019-07-23 20:59:57.892 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-23 20:59:57.943 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 20:59:57.957 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 20:59:57.957 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 20:59:57.958 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 20:59:57.958 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 20:59:57.958 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 20:59:57.958 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 21:01:18.457 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-23 21:01:18.525 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 21:01:18.540 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 21:01:18.555 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 21:01:18.555 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 21:01:18.556 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 21:01:18.557 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 21:01:18.557 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 21:01:29.217 +02:00 [DBG] Login Url: /Account/Login
2019-07-23 21:01:29.221 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 21:01:29.222 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-23 21:01:29.222 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-23 21:01:29.223 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 21:01:29.224 +02:00 [DBG] Error Url: /home/error
2019-07-23 21:01:29.225 +02:00 [DBG] Error Id Parameter: errorId
2019-07-23 21:01:44.993 +02:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 21:01:45.056 +02:00 [DBG] Augmenting SignInContext
2019-07-23 21:01:45.059 +02:00 [DBG] Adding idp claim with value: local
2019-07-23 21:01:45.060 +02:00 [DBG] Adding amr claim with value: pwd
2019-07-23 21:01:45.075 +02:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-23 21:01:46.266 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-23 21:01:46.275 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-23 21:01:46.279 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-23 21:01:46.285 +02:00 [DBG] Start authorize request
2019-07-23 21:01:46.291 +02:00 [DBG] User in authorize request: 2
2019-07-23 21:01:46.296 +02:00 [DBG] Start authorize request protocol validation
2019-07-23 21:01:46.317 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-23 21:01:46.342 +02:00 [ERR] Invalid redirect_uri: http://localhost:4200/silent-refresh.html
{"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/silent-refresh.html","response_type":"id_token","scope":"openid","state":"856b2a433da9404b97270e7bd0c894c9","nonce":"feeb6c0558c548908e3fea52c9713a05","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 21:01:46.369 +02:00 [ERR] Request validation failed
2019-07-23 21:01:46.372 +02:00 [INF] {"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":null,"AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2","ResponseType":null,"ResponseMode":null,"GrantType":null,"RequestedScopes":"","State":null,"UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/silent-refresh.html","response_type":"id_token","scope":"openid","state":"856b2a433da9404b97270e7bd0c894c9","nonce":"feeb6c0558c548908e3fea52c9713a05","prompt":"none"},"$type":"AuthorizeRequestValidationLog"}
2019-07-23 21:03:26.643 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-23 21:03:26.707 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 21:03:26.718 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 21:03:26.718 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 21:03:26.719 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 21:03:26.719 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 21:03:26.719 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 21:03:26.719 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 21:04:23.580 +02:00 [DBG] Login Url: /Account/Login
2019-07-23 21:04:23.582 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 21:04:23.584 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-23 21:04:23.585 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-23 21:04:23.586 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 21:04:23.586 +02:00 [DBG] Error Url: /home/error
2019-07-23 21:04:23.587 +02:00 [DBG] Error Id Parameter: errorId
2019-07-23 21:05:41.977 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 21:05:41.982 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 21:05:41.983 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 21:05:41.987 +02:00 [DBG] Start discovery request
2019-07-23 21:05:47.406 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-23 21:05:47.413 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-23 21:05:47.414 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-23 21:05:47.422 +02:00 [DBG] Start userinfo request
2019-07-23 21:05:47.427 +02:00 [DBG] Bearer token not found
2019-07-23 21:05:47.427 +02:00 [ERR] No access token found.
2019-07-23 21:05:51.993 +02:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 21:05:52.004 +02:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 21:05:52.008 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 21:05:52.028 +02:00 [WRN] Invalid HTTP request for token endpoint
2019-07-23 21:07:04.898 +02:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 21:07:04.947 +02:00 [INF] AuthenticationScheme: idsrv signed out.
2019-07-23 21:07:16.009 +02:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-23 21:07:16.042 +02:00 [DBG] Augmenting SignInContext
2019-07-23 21:07:16.047 +02:00 [DBG] Adding idp claim with value: local
2019-07-23 21:07:16.048 +02:00 [DBG] Adding amr claim with value: pwd
2019-07-23 21:07:16.055 +02:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-24 10:13:07.534 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-24 10:13:07.585 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 10:13:07.596 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 10:13:07.597 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 10:13:07.597 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 10:13:07.597 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 10:13:07.598 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 10:13:07.599 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-24 10:13:25.851 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 10:13:25.870 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:13:25.871 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:13:25.900 +02:00 [DBG] Login Url: /Account/Login
2019-07-24 10:13:25.909 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 10:13:25.915 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-24 10:13:25.916 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-24 10:13:25.917 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 10:13:25.918 +02:00 [DBG] Error Url: /home/error
2019-07-24 10:13:25.920 +02:00 [DBG] Error Id Parameter: errorId
2019-07-24 10:13:26.026 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:13:26.037 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:13:26.047 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:13:26.054 +02:00 [DBG] Start discovery request
2019-07-24 10:13:26.169 +02:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-24 10:13:26.171 +02:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-24 10:13:26.174 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 10:13:26.217 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 10:13:26.219 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 10:13:26.223 +02:00 [DBG] Start authorize request
2019-07-24 10:13:26.228 +02:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-24 10:13:26.233 +02:00 [DBG] No user present in authorize request
2019-07-24 10:13:26.238 +02:00 [DBG] Start authorize request protocol validation
2019-07-24 10:13:26.256 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:13:26.300 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 10:13:26.316 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid fightcore-backend","State":"e157361c7d694c80bb7dcecec8362e71","UiLocales":null,"Nonce":"0145a6cab5674a45a3b8f685192d1033","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid fightcore-backend","state":"e157361c7d694c80bb7dcecec8362e71","nonce":"0145a6cab5674a45a3b8f685192d1033"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 10:13:26.347 +02:00 [INF] Showing login: User is not authenticated
2019-07-24 10:13:26.366 +02:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-24 10:13:26.368 +02:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-24 10:13:26.544 +02:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-24 10:13:26.546 +02:00 [DBG] Start authorize request protocol validation
2019-07-24 10:13:26.547 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:13:26.548 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 10:13:26.551 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:13:34.967 +02:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 10:13:34.969 +02:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-24 10:13:34.970 +02:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-24 10:13:35.018 +02:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-24 10:13:35.019 +02:00 [DBG] Start authorize request protocol validation
2019-07-24 10:13:35.019 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:13:35.020 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 10:13:35.037 +02:00 [DBG] Augmenting SignInContext
2019-07-24 10:13:35.039 +02:00 [DBG] Adding idp claim with value: local
2019-07-24 10:13:35.040 +02:00 [DBG] Adding amr claim with value: pwd
2019-07-24 10:13:35.042 +02:00 [INF] idsrv was not authenticated. Failure message: Ticket expired
2019-07-24 10:13:35.049 +02:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-24 10:13:35.051 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:13:35.055 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 10:13:35.057 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 10:13:35.058 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 10:13:35.064 +02:00 [DBG] Start authorize callback request
2019-07-24 10:13:35.069 +02:00 [DBG] User in authorize request: 2
2019-07-24 10:13:35.069 +02:00 [DBG] Start authorize request protocol validation
2019-07-24 10:13:35.069 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:13:35.070 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 10:13:35.072 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid fightcore-backend","State":"e157361c7d694c80bb7dcecec8362e71","UiLocales":null,"Nonce":"0145a6cab5674a45a3b8f685192d1033","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"38a3595e8dad173211da2e28c324dc16","Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid fightcore-backend","state":"e157361c7d694c80bb7dcecec8362e71","nonce":"0145a6cab5674a45a3b8f685192d1033"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 10:13:35.080 +02:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-24 10:13:35.088 +02:00 [DBG] Client is configured to not require consent, no consent is required
2019-07-24 10:13:35.095 +02:00 [DBG] Creating Implicit Flow response.
2019-07-24 10:13:35.104 +02:00 [DBG] Getting claims for access token for client: angular_spa
2019-07-24 10:13:35.105 +02:00 [DBG] Getting claims for access token for subject: 2
2019-07-24 10:13:35.109 +02:00 [DBG] Get profile called for subject 2 from client Angular SPA with claim types [] via ClaimsProviderAccessToken
2019-07-24 10:13:35.111 +02:00 [DBG] Issued claims: []
2019-07-24 10:13:35.183 +02:00 [DBG] Getting claims for identity token for subject: 2 and client: angular_spa
2019-07-24 10:13:35.186 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 10:13:35.197 +02:00 [DBG] Authorize endpoint response
{"SubjectId":"2","ClientId":"angular_spa","RedirectUri":"http://localhost:4200/auth-callback","State":"e157361c7d694c80bb7dcecec8362e71","Scope":"openid fightcore-backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 10:13:35.222 +02:00 [DBG] Augmenting SignInContext
2019-07-24 10:13:35.223 +02:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-24 10:13:37.287 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 10:13:37.290 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:13:37.302 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:13:37.304 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:13:37.305 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:13:37.318 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:13:37.325 +02:00 [DBG] Start discovery request
2019-07-24 10:13:37.370 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 10:13:37.373 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:13:37.374 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:13:37.375 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 10:13:37.378 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 10:13:37.379 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 10:13:37.386 +02:00 [DBG] Start key discovery request
2019-07-24 10:13:37.450 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 10:13:37.482 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:13:37.487 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:13:37.489 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 10:13:37.494 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 10:13:37.497 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 10:13:37.510 +02:00 [DBG] Start userinfo request
2019-07-24 10:13:37.524 +02:00 [DBG] Bearer token found in header
2019-07-24 10:13:37.637 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:13:37.739 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:13:37.774 +02:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-24 10:13:37.792 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 10:13:37.825 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563956015,"exp":1563959615,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","fightcore-backend"],"client_id":"angular_spa","sub":"2","auth_time":1563956015,"idp":"local","scope":["openid","fightcore-backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 10:13:37.864 +02:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-24 10:13:37.893 +02:00 [DBG] Creating userinfo response
2019-07-24 10:13:37.902 +02:00 [DBG] Scopes in access token: openid fightcore-backend
2019-07-24 10:13:37.912 +02:00 [DBG] Scopes in access token: openid fightcore-backend
2019-07-24 10:13:37.922 +02:00 [DBG] Requested claim types: sub
2019-07-24 10:13:37.953 +02:00 [DBG] Scopes in access token: openid fightcore-backend
2019-07-24 10:13:38.004 +02:00 [DBG] Get profile called for subject 2 from client Angular SPA with claim types ["sub"] via UserInfoEndpoint
2019-07-24 10:13:38.015 +02:00 [DBG] Issued claims: []
2019-07-24 10:13:38.017 +02:00 [INF] Profile service returned the following claim types: 
2019-07-24 10:13:38.019 +02:00 [DBG] End userinfo request
2019-07-24 10:13:38.034 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 10:13:38.056 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 10:13:38.060 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 10:13:38.065 +02:00 [DBG] Rendering check session result
2019-07-24 10:14:21.174 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 10:14:21.175 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:14:21.178 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:14:21.180 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:14:21.181 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:14:21.182 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:14:21.182 +02:00 [DBG] Start discovery request
2019-07-24 10:14:21.320 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 10:14:21.323 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 10:14:21.335 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 10:14:21.337 +02:00 [DBG] Rendering check session result
2019-07-24 10:14:50.902 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 10:14:50.903 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:14:50.905 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:14:50.907 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:14:50.908 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:14:50.909 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:14:50.910 +02:00 [DBG] Start discovery request
2019-07-24 10:14:51.069 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 10:14:51.071 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 10:14:51.072 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 10:14:51.074 +02:00 [DBG] Rendering check session result
2019-07-24 10:17:10.839 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 10:17:10.882 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:17:10.908 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:17:10.910 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:17:10.917 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:17:10.933 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:17:10.943 +02:00 [DBG] Start discovery request
2019-07-24 10:17:11.026 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 10:17:11.033 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 10:17:11.039 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 10:17:11.042 +02:00 [DBG] Rendering check session result
2019-07-24 10:19:12.493 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-24 10:19:12.609 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 10:19:12.764 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 10:19:12.765 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 10:19:12.765 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 10:19:12.765 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 10:19:12.765 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 10:19:12.765 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-24 10:19:31.853 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 10:19:31.875 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:19:31.876 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:19:31.910 +02:00 [DBG] Login Url: /Account/Login
2019-07-24 10:19:31.916 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 10:19:31.917 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-24 10:19:31.919 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-24 10:19:31.921 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 10:19:31.922 +02:00 [DBG] Error Url: /home/error
2019-07-24 10:19:31.922 +02:00 [DBG] Error Id Parameter: errorId
2019-07-24 10:19:31.992 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:19:31.998 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:19:32.005 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:19:32.012 +02:00 [DBG] Start discovery request
2019-07-24 10:19:32.161 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 10:19:32.222 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 10:19:32.224 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 10:19:32.230 +02:00 [DBG] Start authorize request
2019-07-24 10:19:32.245 +02:00 [DBG] User in authorize request: 2
2019-07-24 10:19:32.254 +02:00 [DBG] Start authorize request protocol validation
2019-07-24 10:19:32.307 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:19:32.370 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 10:19:32.396 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid fightcore-backend","State":"0209c25f8b67460094865b2fefdf1453","UiLocales":null,"Nonce":"d33ab22f854343a29870b7d20aaf4f3e","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"38a3595e8dad173211da2e28c324dc16","Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid fightcore-backend","state":"0209c25f8b67460094865b2fefdf1453","nonce":"d33ab22f854343a29870b7d20aaf4f3e"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 10:19:32.436 +02:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-24 10:19:32.445 +02:00 [DBG] Client is configured to not require consent, no consent is required
2019-07-24 10:19:32.452 +02:00 [DBG] Creating Implicit Flow response.
2019-07-24 10:19:32.466 +02:00 [DBG] Getting claims for access token for client: angular_spa
2019-07-24 10:19:32.466 +02:00 [DBG] Getting claims for access token for subject: 2
2019-07-24 10:19:32.472 +02:00 [DBG] Get profile called for subject 2 from client Angular SPA with claim types [] via ClaimsProviderAccessToken
2019-07-24 10:19:32.474 +02:00 [DBG] Issued claims: []
2019-07-24 10:19:32.549 +02:00 [DBG] Getting claims for identity token for subject: 2 and client: angular_spa
2019-07-24 10:19:32.550 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 10:19:32.563 +02:00 [DBG] Authorize endpoint response
{"SubjectId":"2","ClientId":"angular_spa","RedirectUri":"http://localhost:4200/auth-callback","State":"0209c25f8b67460094865b2fefdf1453","Scope":"openid fightcore-backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 10:19:34.195 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 10:19:34.199 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:19:34.201 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:19:34.202 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:19:34.206 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:19:34.208 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:19:34.209 +02:00 [DBG] Start discovery request
2019-07-24 10:19:34.307 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 10:19:34.310 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:19:34.311 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:19:34.312 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 10:19:34.315 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 10:19:34.316 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 10:19:34.322 +02:00 [DBG] Start key discovery request
2019-07-24 10:19:34.429 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 10:19:34.431 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:19:34.432 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:19:34.432 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 10:19:34.435 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 10:19:34.437 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 10:19:34.444 +02:00 [DBG] Start userinfo request
2019-07-24 10:19:34.448 +02:00 [DBG] Bearer token found in header
2019-07-24 10:19:34.516 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:19:34.521 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:19:34.527 +02:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-24 10:19:34.527 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 10:19:34.529 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563956372,"exp":1563959972,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","fightcore-backend"],"client_id":"angular_spa","sub":"2","auth_time":1563956015,"idp":"local","scope":["openid","fightcore-backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 10:19:34.557 +02:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-24 10:19:34.565 +02:00 [DBG] Creating userinfo response
2019-07-24 10:19:34.570 +02:00 [DBG] Scopes in access token: openid fightcore-backend
2019-07-24 10:19:34.574 +02:00 [DBG] Scopes in access token: openid fightcore-backend
2019-07-24 10:19:34.578 +02:00 [DBG] Requested claim types: sub
2019-07-24 10:19:34.578 +02:00 [DBG] Scopes in access token: openid fightcore-backend
2019-07-24 10:19:34.581 +02:00 [DBG] Get profile called for subject 2 from client Angular SPA with claim types ["sub"] via UserInfoEndpoint
2019-07-24 10:19:34.583 +02:00 [DBG] Issued claims: []
2019-07-24 10:19:34.583 +02:00 [INF] Profile service returned the following claim types: 
2019-07-24 10:19:34.584 +02:00 [DBG] End userinfo request
2019-07-24 10:19:34.596 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 10:19:34.597 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 10:19:34.599 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 10:19:34.602 +02:00 [DBG] Rendering check session result
2019-07-24 10:20:02.158 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 10:20:02.159 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:20:02.161 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:20:02.162 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:20:02.163 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:20:02.165 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:20:02.167 +02:00 [DBG] Start discovery request
2019-07-24 10:20:02.306 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 10:20:02.311 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 10:20:02.319 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 10:20:02.322 +02:00 [DBG] Rendering check session result
2019-07-24 10:22:53.907 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-24 10:22:54.064 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 10:22:54.082 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 10:22:54.089 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 10:22:54.093 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 10:22:54.098 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 10:22:54.101 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 10:22:54.102 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-24 10:23:11.712 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 10:23:11.755 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:23:11.773 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:23:11.836 +02:00 [DBG] Login Url: /Account/Login
2019-07-24 10:23:11.861 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 10:23:11.880 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-24 10:23:11.888 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-24 10:23:11.892 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 10:23:11.893 +02:00 [DBG] Error Url: /home/error
2019-07-24 10:23:11.894 +02:00 [DBG] Error Id Parameter: errorId
2019-07-24 10:23:11.974 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:23:11.980 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:23:11.982 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:23:11.997 +02:00 [DBG] Start discovery request
2019-07-24 10:23:12.150 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 10:23:12.179 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 10:23:12.181 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 10:23:12.190 +02:00 [DBG] Start authorize request
2019-07-24 10:23:12.201 +02:00 [DBG] User in authorize request: 2
2019-07-24 10:23:12.207 +02:00 [DBG] Start authorize request protocol validation
2019-07-24 10:23:12.228 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:23:12.277 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 10:23:12.295 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid fightcore-backend","State":"6fd3458392084c92be8bd5ba33e6e210","UiLocales":null,"Nonce":"02190ac868ab4d24aa8c09e833871d6b","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"38a3595e8dad173211da2e28c324dc16","Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid fightcore-backend","state":"6fd3458392084c92be8bd5ba33e6e210","nonce":"02190ac868ab4d24aa8c09e833871d6b"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 10:23:12.329 +02:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-24 10:23:12.338 +02:00 [DBG] Client is configured to not require consent, no consent is required
2019-07-24 10:23:12.345 +02:00 [DBG] Creating Implicit Flow response.
2019-07-24 10:23:12.354 +02:00 [DBG] Getting claims for access token for client: angular_spa
2019-07-24 10:23:12.355 +02:00 [DBG] Getting claims for access token for subject: 2
2019-07-24 10:23:12.358 +02:00 [DBG] Get profile called for subject 2 from client Angular SPA with claim types [] via ClaimsProviderAccessToken
2019-07-24 10:23:12.360 +02:00 [DBG] Issued claims: []
2019-07-24 10:23:12.431 +02:00 [DBG] Getting claims for identity token for subject: 2 and client: angular_spa
2019-07-24 10:23:12.432 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 10:23:12.444 +02:00 [DBG] Authorize endpoint response
{"SubjectId":"2","ClientId":"angular_spa","RedirectUri":"http://localhost:4200/auth-callback","State":"6fd3458392084c92be8bd5ba33e6e210","Scope":"openid fightcore-backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 10:23:14.095 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 10:23:14.097 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:23:14.099 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:23:14.100 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:23:14.101 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:23:14.102 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:23:14.104 +02:00 [DBG] Start discovery request
2019-07-24 10:23:14.159 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 10:23:14.162 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:23:14.163 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:23:14.164 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 10:23:14.165 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 10:23:14.166 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 10:23:14.173 +02:00 [DBG] Start key discovery request
2019-07-24 10:23:14.255 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 10:23:14.260 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:23:14.262 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:23:14.262 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 10:23:14.281 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 10:23:14.289 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 10:23:14.298 +02:00 [DBG] Start userinfo request
2019-07-24 10:23:14.302 +02:00 [DBG] Bearer token found in header
2019-07-24 10:23:14.366 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:23:14.371 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:23:14.373 +02:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-24 10:23:14.374 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 10:23:14.376 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563956592,"exp":1563960192,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","fightcore-backend"],"client_id":"angular_spa","sub":"2","auth_time":1563956015,"idp":"local","scope":["openid","fightcore-backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 10:23:14.380 +02:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-24 10:23:14.384 +02:00 [DBG] Creating userinfo response
2019-07-24 10:23:14.389 +02:00 [DBG] Scopes in access token: openid fightcore-backend
2019-07-24 10:23:14.392 +02:00 [DBG] Scopes in access token: openid fightcore-backend
2019-07-24 10:23:14.395 +02:00 [DBG] Requested claim types: sub
2019-07-24 10:23:14.396 +02:00 [DBG] Scopes in access token: openid fightcore-backend
2019-07-24 10:23:14.397 +02:00 [DBG] Get profile called for subject 2 from client Angular SPA with claim types ["sub"] via UserInfoEndpoint
2019-07-24 10:23:14.399 +02:00 [DBG] Issued claims: []
2019-07-24 10:23:14.399 +02:00 [INF] Profile service returned the following claim types: 
2019-07-24 10:23:14.400 +02:00 [DBG] End userinfo request
2019-07-24 10:23:14.413 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 10:23:14.415 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 10:23:14.416 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 10:23:14.419 +02:00 [DBG] Rendering check session result
2019-07-24 10:24:11.686 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 10:24:11.691 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:24:11.698 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:24:11.701 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:24:11.705 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:24:11.710 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:24:11.721 +02:00 [DBG] Start discovery request
2019-07-24 10:24:11.964 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 10:24:11.970 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 10:24:11.977 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 10:24:11.986 +02:00 [DBG] Rendering check session result
2019-07-24 10:24:12.362 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:24:12.368 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:24:12.379 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:24:12.390 +02:00 [DBG] Start discovery request
2019-07-24 10:24:12.554 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 10:24:12.556 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 10:24:12.558 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 10:24:12.560 +02:00 [DBG] Start key discovery request
2019-07-24 10:24:29.137 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 10:24:29.139 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:24:29.140 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:24:29.143 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:24:29.150 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:24:29.154 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:24:29.160 +02:00 [DBG] Start discovery request
2019-07-24 10:24:29.320 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 10:24:29.324 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 10:24:29.326 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 10:24:29.330 +02:00 [DBG] Rendering check session result
2019-07-24 10:24:39.326 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 10:24:39.333 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:24:39.338 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:24:39.340 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:24:39.344 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:24:39.347 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:24:39.349 +02:00 [DBG] Start discovery request
2019-07-24 10:24:39.520 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 10:24:39.548 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 10:24:39.554 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 10:24:39.559 +02:00 [DBG] Rendering check session result
2019-07-24 10:25:16.436 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 10:25:16.439 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:25:16.440 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:25:16.441 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:25:16.443 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:25:16.445 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:25:16.449 +02:00 [DBG] Start discovery request
2019-07-24 10:25:16.635 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 10:25:16.646 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 10:25:16.648 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 10:25:16.650 +02:00 [DBG] Rendering check session result
2019-07-24 10:25:33.568 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 10:25:33.570 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:25:33.572 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:25:33.574 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:25:33.582 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:25:33.586 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:25:33.592 +02:00 [DBG] Start discovery request
2019-07-24 10:25:33.743 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 10:25:33.750 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 10:25:33.753 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 10:25:33.756 +02:00 [DBG] Rendering check session result
2019-07-24 10:25:54.767 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-24 10:25:54.813 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 10:25:54.822 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 10:25:54.822 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 10:25:54.822 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 10:25:54.823 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 10:25:54.823 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 10:25:54.823 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-24 10:26:14.993 +02:00 [DBG] Login Url: /Account/Login
2019-07-24 10:26:14.995 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 10:26:14.997 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-24 10:26:14.997 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-24 10:26:14.999 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 10:26:14.999 +02:00 [DBG] Error Url: /home/error
2019-07-24 10:26:15.000 +02:00 [DBG] Error Id Parameter: errorId
2019-07-24 10:26:25.951 +02:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 10:26:26.001 +02:00 [INF] AuthenticationScheme: idsrv signed out.
2019-07-24 10:26:26.128 +02:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2019-07-24 10:26:26.143 +02:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2019-07-24 10:26:26.145 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2019-07-24 10:26:26.154 +02:00 [DBG] Processing signout callback request
2019-07-24 10:26:26.188 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:26:26.194 +02:00 [DBG] No client front-channel logout URLs
2019-07-24 10:26:26.195 +02:00 [DBG] No client back-channel logout URLs
2019-07-24 10:26:26.196 +02:00 [INF] Successful signout callback.
2019-07-24 10:26:26.198 +02:00 [DBG] No client front-channel iframe urls
2019-07-24 10:26:26.202 +02:00 [DBG] No client back-channel iframe urls
2019-07-24 10:27:12.997 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-24 10:27:13.043 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 10:27:13.052 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 10:27:13.053 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 10:27:13.053 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 10:27:13.053 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 10:27:13.053 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 10:27:13.053 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-24 10:27:28.136 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 10:27:28.161 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:27:28.163 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:27:28.183 +02:00 [DBG] Login Url: /Account/Login
2019-07-24 10:27:28.185 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 10:27:28.185 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-24 10:27:28.190 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-24 10:27:28.190 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 10:27:28.191 +02:00 [DBG] Error Url: /home/error
2019-07-24 10:27:28.192 +02:00 [DBG] Error Id Parameter: errorId
2019-07-24 10:27:28.224 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:27:28.228 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:27:28.229 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:27:28.233 +02:00 [DBG] Start discovery request
2019-07-24 10:27:28.319 +02:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2019-07-24 10:27:28.339 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2019-07-24 10:27:28.341 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2019-07-24 10:27:28.346 +02:00 [DBG] Start authorize request
2019-07-24 10:27:28.356 +02:00 [DBG] No user present in authorize request
2019-07-24 10:27:28.361 +02:00 [DBG] Start authorize request protocol validation
2019-07-24 10:27:28.380 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:27:28.430 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 10:27:28.446 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"anonymous","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid fightcore-backend","State":"fb3fe412998d4435929719662472d0c6","UiLocales":null,"Nonce":"fff092f731b84da9aa5416202a619ec8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid fightcore-backend","state":"fb3fe412998d4435929719662472d0c6","nonce":"fff092f731b84da9aa5416202a619ec8"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 10:27:28.476 +02:00 [INF] Showing login: User is not authenticated
2019-07-24 10:27:28.642 +02:00 [DBG] Start authorize request protocol validation
2019-07-24 10:27:28.642 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:27:28.644 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 10:27:28.648 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:27:34.432 +02:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2019-07-24 10:27:34.471 +02:00 [DBG] Start authorize request protocol validation
2019-07-24 10:27:34.472 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:27:34.474 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 10:27:34.492 +02:00 [DBG] Augmenting SignInContext
2019-07-24 10:27:34.495 +02:00 [DBG] Adding idp claim with value: local
2019-07-24 10:27:34.495 +02:00 [DBG] Adding amr claim with value: pwd
2019-07-24 10:27:34.509 +02:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-24 10:27:34.511 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:27:34.518 +02:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2019-07-24 10:27:34.519 +02:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2019-07-24 10:27:34.521 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2019-07-24 10:27:34.528 +02:00 [DBG] Start authorize callback request
2019-07-24 10:27:34.532 +02:00 [DBG] User in authorize request: 2
2019-07-24 10:27:34.532 +02:00 [DBG] Start authorize request protocol validation
2019-07-24 10:27:34.533 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:27:34.534 +02:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2019-07-24 10:27:34.535 +02:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"angular_spa","ClientName":"Angular SPA","RedirectUri":"http://localhost:4200/auth-callback","AllowedRedirectUris":["http://localhost:4200/auth-callback"],"SubjectId":"2","ResponseType":"id_token token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"openid fightcore-backend","State":"fb3fe412998d4435929719662472d0c6","UiLocales":null,"Nonce":"fff092f731b84da9aa5416202a619ec8","AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"156913c6ba54bb774535068acaa1b620","Raw":{"client_id":"angular_spa","redirect_uri":"http://localhost:4200/auth-callback","response_type":"id_token token","scope":"openid fightcore-backend","state":"fb3fe412998d4435929719662472d0c6","nonce":"fff092f731b84da9aa5416202a619ec8"},"$type":"AuthorizeRequestValidationLog"}
2019-07-24 10:27:34.544 +02:00 [DBG] IsActive called from: AuthorizeEndpoint
2019-07-24 10:27:34.553 +02:00 [DBG] Client is configured to not require consent, no consent is required
2019-07-24 10:27:34.559 +02:00 [DBG] Creating Implicit Flow response.
2019-07-24 10:27:34.568 +02:00 [DBG] Getting claims for access token for client: angular_spa
2019-07-24 10:27:34.569 +02:00 [DBG] Getting claims for access token for subject: 2
2019-07-24 10:27:34.573 +02:00 [DBG] Get profile called for subject 2 from client Angular SPA with claim types [] via ClaimsProviderAccessToken
2019-07-24 10:27:34.574 +02:00 [DBG] Issued claims: []
2019-07-24 10:27:34.644 +02:00 [DBG] Getting claims for identity token for subject: 2 and client: angular_spa
2019-07-24 10:27:34.645 +02:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2019-07-24 10:27:34.655 +02:00 [DBG] Authorize endpoint response
{"SubjectId":"2","ClientId":"angular_spa","RedirectUri":"http://localhost:4200/auth-callback","State":"fb3fe412998d4435929719662472d0c6","Scope":"openid fightcore-backend","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2019-07-24 10:27:34.671 +02:00 [DBG] Augmenting SignInContext
2019-07-24 10:27:34.671 +02:00 [INF] AuthenticationScheme: idsrv signed in.
2019-07-24 10:27:36.711 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4200
2019-07-24 10:27:36.712 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:27:36.714 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:27:36.716 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:27:36.718 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:27:36.721 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:27:36.723 +02:00 [DBG] Start discovery request
2019-07-24 10:27:36.823 +02:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4200
2019-07-24 10:27:36.830 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:27:36.838 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:27:36.843 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 10:27:36.846 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 10:27:36.858 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 10:27:36.868 +02:00 [DBG] Start key discovery request
2019-07-24 10:27:37.031 +02:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:4200
2019-07-24 10:27:37.065 +02:00 [DBG] Client list checked and origin: http://localhost:4200 is allowed
2019-07-24 10:27:37.072 +02:00 [DBG] CorsPolicyService allowed origin: http://localhost:4200
2019-07-24 10:27:37.077 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 10:27:37.087 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 10:27:37.125 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 10:27:37.138 +02:00 [DBG] Start userinfo request
2019-07-24 10:27:37.145 +02:00 [DBG] Bearer token found in header
2019-07-24 10:27:37.325 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:27:37.335 +02:00 [DBG] client configuration validation for client angular_spa succeeded.
2019-07-24 10:27:37.338 +02:00 [DBG] IsActive called from: AccessTokenValidation
2019-07-24 10:27:37.341 +02:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2019-07-24 10:27:37.349 +02:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"openid","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1563956854,"exp":1563960454,"iss":"http://localhost:5000","aud":["http://localhost:5000/resources","fightcore-backend"],"client_id":"angular_spa","sub":"2","auth_time":1563956854,"idp":"local","scope":["openid","fightcore-backend"],"amr":"pwd"},"$type":"TokenValidationLog"}
2019-07-24 10:27:37.360 +02:00 [DBG] IsActive called from: UserInfoRequestValidation
2019-07-24 10:27:37.367 +02:00 [DBG] Creating userinfo response
2019-07-24 10:27:37.372 +02:00 [DBG] Scopes in access token: openid fightcore-backend
2019-07-24 10:27:37.378 +02:00 [DBG] Scopes in access token: openid fightcore-backend
2019-07-24 10:27:37.383 +02:00 [DBG] Requested claim types: sub
2019-07-24 10:27:37.383 +02:00 [DBG] Scopes in access token: openid fightcore-backend
2019-07-24 10:27:37.386 +02:00 [DBG] Get profile called for subject 2 from client Angular SPA with claim types ["sub"] via UserInfoEndpoint
2019-07-24 10:27:37.390 +02:00 [DBG] Issued claims: []
2019-07-24 10:27:37.390 +02:00 [INF] Profile service returned the following claim types: 
2019-07-24 10:27:37.393 +02:00 [DBG] End userinfo request
2019-07-24 10:27:37.406 +02:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2019-07-24 10:27:37.408 +02:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2019-07-24 10:27:37.412 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2019-07-24 10:27:37.427 +02:00 [DBG] Rendering check session result
2019-07-24 10:27:37.803 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:27:37.806 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:27:37.809 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:27:37.823 +02:00 [DBG] Start discovery request
2019-07-24 10:27:38.038 +02:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 10:27:38.040 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 10:27:38.042 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 10:27:38.044 +02:00 [DBG] Start key discovery request
2019-07-24 10:36:37.544 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-24 10:36:37.607 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 10:36:37.620 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 10:36:37.620 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 10:36:37.620 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 10:36:37.621 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 10:36:37.621 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 10:36:37.621 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-24 10:37:59.119 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-24 10:37:59.204 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 10:37:59.216 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 10:37:59.216 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 10:37:59.216 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 10:37:59.217 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 10:37:59.217 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 10:37:59.217 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-24 10:41:15.422 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-24 10:41:15.470 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 10:41:15.480 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 10:41:15.480 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 10:41:15.481 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 10:41:15.481 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 10:41:15.481 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 10:41:15.481 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-24 10:43:25.324 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-24 10:43:25.382 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 10:43:25.393 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 10:43:25.394 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 10:43:25.394 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 10:43:25.394 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 10:43:25.394 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 10:43:25.394 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-24 10:47:09.213 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-24 10:47:09.270 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 10:47:09.286 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 10:47:09.287 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 10:47:09.287 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 10:47:09.287 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 10:47:09.287 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 10:47:09.288 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-24 10:50:07.590 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-24 10:50:07.658 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 10:50:07.671 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 10:50:07.672 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 10:50:07.674 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 10:50:07.674 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 10:50:07.674 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 10:50:07.674 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-24 10:51:20.463 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-24 10:51:20.526 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 10:51:20.547 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 10:51:20.547 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 10:51:20.548 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 10:51:20.548 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 10:51:20.548 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 10:51:20.548 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-24 10:56:38.715 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-24 10:56:38.769 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 10:56:38.779 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 10:56:38.780 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 10:56:38.780 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 10:56:38.780 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 10:56:38.780 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 10:56:38.780 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-24 10:57:09.467 +02:00 [DBG] Login Url: /Account/Login
2019-07-24 10:57:09.469 +02:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 10:57:09.471 +02:00 [DBG] Logout Url: /Account/Logout
2019-07-24 10:57:09.472 +02:00 [DBG] ConsentUrl Url: /consent
2019-07-24 10:57:09.472 +02:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 10:57:09.473 +02:00 [DBG] Error Url: /home/error
2019-07-24 10:57:09.474 +02:00 [DBG] Error Id Parameter: errorId
2019-07-24 10:57:09.525 +02:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 10:57:09.530 +02:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 10:57:09.530 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 10:57:09.535 +02:00 [DBG] Start discovery request
2019-07-24 10:57:12.717 +02:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2019-07-24 10:57:12.740 +02:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2019-07-24 10:57:12.741 +02:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2019-07-24 10:57:12.748 +02:00 [DBG] Start userinfo request
2019-07-24 10:57:12.752 +02:00 [DBG] Bearer token not found
2019-07-24 10:57:12.752 +02:00 [ERR] No access token found.
2019-07-24 10:59:15.372 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-24 10:59:15.436 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 10:59:15.453 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 10:59:15.461 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 10:59:15.464 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 10:59:15.469 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 10:59:15.470 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 10:59:15.470 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-24 10:59:38.326 +02:00 [INF] Starting IdentityServer4 version 2.5.0.0
2019-07-24 10:59:38.383 +02:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 10:59:38.393 +02:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 10:59:38.393 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 10:59:38.394 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 10:59:38.394 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 10:59:38.394 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 10:59:38.394 +02:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
